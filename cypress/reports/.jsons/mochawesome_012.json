{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-16T03:30:56.960Z",
    "end": "2024-05-16T03:30:58.547Z",
    "duration": 1587,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ce7f4e1-7cbd-487a-9330-90608df6d89c",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\post_to_all_products_list.cy.js",
      "file": "cypress\\e2e\\api\\post_to_all_products_list.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7dfb320-1a2d-4b5c-bda3-338c0ec02619",
          "title": "API Test: POST To All Products List",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return method not supported message",
              "fullTitle": "API Test: POST To All Products List should return method not supported message",
              "timedOut": null,
              "duration": 1510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://automationexercise.com/api/productsList',\n  failOnStatusCode: false // Prevent Cypress from failing the test due to non-2xx response\n}).then(response => {\n  // Convert response.body to object\n  const data = JSON.parse(response.body);\n  // Assert the response status code\n  expect(response.status).to.eq(200);\n  // Assert the response body message\n  expect(data).to.have.property('message', 'This request method is not supported.');\n  // Log the response body for inspection (optional)\n  cy.log(JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "9e091985-85b8-4cfa-b15c-30dc7f1c7e5a",
              "parentUUID": "f7dfb320-1a2d-4b5c-bda3-338c0ec02619",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e091985-85b8-4cfa-b15c-30dc7f1c7e5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportPageTitle": "custom-title",
        "reportDir": "cypress\\reports\\.jsons",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}